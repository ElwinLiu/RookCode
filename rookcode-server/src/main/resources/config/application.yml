server:
  port: 8081
spring:
  cache:
    type: none
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://175.***.***.***:3306/rookcode?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
    username: 0000
    password: 0000
    hikari:
      #连接池名
      pool-name: DateHikariCP
      #最小空闲连接数
      minimum-idle: 5
      #空闲连接存活最大时间，默认600000(10分钟)
      idle-timeout: 180000
      #最大连接数，默认10
      maximum-pool-size: 10
      #从连接池返回的连接的自动提交
      auto-commit: true
      #连接最大存活时间，0表示永久存活，默认1800000 (30分钟)
      max-lifetime: 1800000
      #连接超时时|间，默认30000 (30秒)
      connection-timeout: 30000
      #测试连接是否可用的查询语句
      connection-test-query: SELECT 1


  main:
    # 当遇到同名时，是否覆盖注册
    allow-bean-definition-overriding: true
    allow-circular-references: true

  #邮箱验证码配置
  mail:
    #smtp服务主机  qq邮箱则为smtp.qq.com;163邮箱是smtp.163.com
    host: smtp.qq.com
    #服务协议
    protocol: smtp
    # 编码集
    default-encoding: UTF-8
    #发送邮件的账户
    username: 0000@qq.com
    #授权码
    password: 0000
    test-connection: true
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  redis:
    host: 47.***.***.***
    port: 6379
    password: 0000
    database: 0
    lettuce:
      pool:
        max-idle: 16
        max-active: 32
        min-idle: 8

#Mybatis-plus配置
mybatis-plus:
  #配置Mapper映射文件
  mapper-locations: classpath*:/mapper/*Mapper.xml
  #配置MyBatis数据返回类型别名（默认别名是类名>
  type-aliases-package: com.example.server.pojo
  configuration:
    #自动驼峰命名
    map-underscore-to-camel-case : false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
logging:
  level:
    com.example.mapper: debug

jwt:
  # Jwt存储的请求头
  tokenHeader: Authorization
  # Jwt加密秘钥
  secret: rookcode-secret
  # Jwt 的超期限时间（60*60）*24
  expiration: 604800
  # Jwt负载中拿到开头
  tokenHead: Bearer

aliyun:
  oss:
    file:
      endpoint: 00000
      keyid: 00000000000000000
      keysecret: 00000000000000000
      #bucket可以在控制台创建也可以在代码中创建
      bucketname: 0000000000000000

qiniu:
  kodo:
    ACCESS_KEY: 0000000000000000000
    SECRET_KEY: 0000000000000000000
    BUCKET_NAME: rookcode
    DOMAIN: 0000

judgehost:
  token:
    userId: RookCode
    userSecret: RookCode

jacoco:
  agent:
    enabled: true
  excludes: com.example.server.service.impl.*Test*

